<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>thebesttv&#39;s blog</title>
  
  <subtitle>Think twice, then code once.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://thebesttv.github.io/"/>
  <updated>2019-10-01T06:11:07.983Z</updated>
  <id>https://thebesttv.github.io/</id>
  
  <author>
    <name>thebesttv</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[CF 1228] 解题报告</title>
    <link href="https://thebesttv.github.io/2019/10/01/CF_1228/"/>
    <id>https://thebesttv.github.io/2019/10/01/CF_1228/</id>
    <published>2019-09-30T16:00:00.000Z</published>
    <updated>2019-10-01T06:11:07.983Z</updated>
    
    <content type="html"><![CDATA[<p>这算是第一次正式打CF吧，然而只过了两题……然而排名还是上去了一点……</p><a id="more"></a><h1 id="A-Distinct-Digits"><a href="#A-Distinct-Digits" class="headerlink" title="A: Distinct Digits"></a>A: Distinct Digits</h1><h1 id="B-Filling-the-Grid"><a href="#B-Filling-the-Grid" class="headerlink" title="B: Filling the Grid"></a>B: Filling the Grid</h1><h1 id="C-Primes-and-Multiplication"><a href="#C-Primes-and-Multiplication" class="headerlink" title="C: Primes and Multiplication"></a>C: Primes and Multiplication</h1><p>大意：令 $prime(x)$ 表示 $x$ 的质因数集合，$g(x,p) = \max\{ p^k \}, 其中 p^k | x $，$ f(x,y) = \prod_{p\in prime(x)} g(y,p)$。求 $ans(x,n) = \prod_{i=1}^n f(x,i)$ 。$ x \leq 10^9, n \leq 10^{18} $</p><p>首先将 x 质因数分解，枚举 $i = 1 : \sqrt{n}$，分别判断 i 和 n/i 是否为质数并加入 prime 数组。<br>题目原意是把 1:n 每个数在 prime 中的_幂最大约数_相乘，若枚举 n 的话需要 $O(n)$ 的复杂度，无法承受。转为枚举 prime 中的每个质数 p 。对每个 p ，枚举不大于 n 的所有 $p^k$ 。对每个 $p^k$ ，令 m 表示 1:n 中所有以 $p^k$ 为 k 最大的约数的个数，m 即为 1:n 中 $p^k$ 的倍数个数减去 $p^{k+1}$ 的倍数个数，即 $ m = \lfloor n / p^k \rfloor - \lfloor n / p^{k+1} \rfloor$ 。则 ans 乘上 $ (p^k)^m $ 即可。</p><p>注意，n 最大为 1e18 ，此时如果 p 取到 1e8 左右，可能会爆 long long ，要注意细节处理，把乘法改为除法。</p><p>交了好几次，都因为爆LL没过，后来改成python一遍过 XD</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> LLU MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> x; LLU n;</span><br><span class="line">VR&lt;LLU&gt; prime;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(!(n&amp;<span class="number">1</span>)) <span class="keyword">return</span> n==<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">int</span> r = <span class="built_in">sqrt</span>(n+<span class="number">0.5</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=r;i+=<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span>(n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LLU <span class="title">pow</span><span class="params">(LLU x, LLU y)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(y==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(y==<span class="number">1</span>) <span class="keyword">return</span> x;</span><br><span class="line">  LLU t = <span class="built_in">pow</span>(x,y&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  t = t * t % MOD;</span><br><span class="line">  <span class="keyword">if</span>(y&amp;<span class="number">1</span>) t = t * x % MOD;</span><br><span class="line">  <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%llu"</span>,&amp;x,&amp;n);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> r = <span class="built_in">sqrt</span>(x+<span class="number">0.5</span>);</span><br><span class="line">  FORR(i,<span class="number">1</span>,r) <span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(isPrime(i)) prime.push_back(i);</span><br><span class="line">    <span class="keyword">if</span>(i*i!=x &amp;&amp; isPrime(x/i)) prime.push_back(x/i);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  LLU ans = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(LLU p : prime)&#123;</span><br><span class="line">    LLU pk = p;</span><br><span class="line">    <span class="keyword">while</span>(pk &lt;= n)&#123;</span><br><span class="line">      LLU m = n/pk - n/pk/p;  <span class="comment">// &lt;b&gt; n/pk/p &lt;/b&gt;</span></span><br><span class="line">      ans = ans * <span class="built_in">pow</span>(pk%MOD,m) % MOD;</span><br><span class="line">      <span class="comment">//if(1.0*pk*p &gt; 1.0*n) break; // double 精度不行</span></span><br><span class="line">      <span class="keyword">if</span>(pk &gt; n/p) <span class="keyword">break</span>; <span class="comment">// 把 pk*p &gt; n 改成 pk &gt; n/p 防止溢出</span></span><br><span class="line">      pk *= p;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,ans);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#<br>#</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这算是第一次正式打CF吧，然而只过了两题……然而排名还是上去了一点……&lt;/p&gt;
    
    </summary>
    
    
      <category term="CF" scheme="https://thebesttv.github.io/tags/CF/"/>
    
  </entry>
  
  <entry>
    <title>数据结构笔记</title>
    <link href="https://thebesttv.github.io/2019/09/22/data_structure_notes/"/>
    <id>https://thebesttv.github.io/2019/09/22/data_structure_notes/</id>
    <published>2019-09-21T16:00:00.000Z</published>
    <updated>2019-09-22T06:18:11.664Z</updated>
    
    <content type="html"><![CDATA[<p>Emm, 就是记录一下一些小技巧之类的。</p><a id="more"></a><h1 id="多项式计算-秦九韶算法"><a href="#多项式计算-秦九韶算法" class="headerlink" title="多项式计算 秦九韶算法"></a>多项式计算 秦九韶算法</h1><p>将多项式的计算<br>$$ f(x) = a_0 + a_1 x + a_2 x^2 + \cdots + a_n x^n$$<br>转化为<br>$$ f(x) = a_0 + x (a_1 + x( a_2 + x ( \cdots + x(a_n))))$$</p><p>可将乘法次数从 $O(n^2)$ 降低到 $O(n)$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> ans = a[n];</span><br><span class="line">  ROR(i,n<span class="number">-1</span>,<span class="number">0</span>) ans = a[i] + ans*x;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Emm, 就是记录一下一些小技巧之类的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://thebesttv.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="notes" scheme="https://thebesttv.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>[Vijos 1488] 路灯的改建计划</title>
    <link href="https://thebesttv.github.io/2019/09/21/Vijos_1488_%E8%B7%AF%E7%81%AF%E7%9A%84%E6%94%B9%E5%BB%BA%E8%AE%A1%E5%88%92/"/>
    <id>https://thebesttv.github.io/2019/09/21/Vijos_1488_路灯的改建计划/</id>
    <published>2019-09-20T16:00:00.000Z</published>
    <updated>2019-09-21T05:47:53.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h1><p>给定一排 n 个路灯，将其分成 m 组，使得总亮度最大。每个路灯有功率 a 和照度 z 两个属性；每组打开的灯功率之和不大于 <code>t * 该组路灯数量(包括灭的)</code> 。</p><a id="more"></a><h1 id="解题报告"><a href="#解题报告" class="headerlink" title="解题报告"></a>解题报告</h1><p>使用两次DP。令 。令 f[i][j] 表示 1:i 的路灯分成 j 组，最大的照度，则 f[i][j] = max{ f[k][j-1] + g[k+1][i] | j-1&lt;=k&lt;i }，其中 g[i][j] (i&lt;=j) 表示将 i:j 的路灯分为一组时最大的照度。求解 g 时，令 h[i][j] 表示前 i 个路灯，功率不大于 j 时的最大照度，则 h[i][j] = max{ h[i-1][j], h[i-1][j-a[i]]+z[i] }。然后就可以<del>欢乐地</del>DP啦！</p><p>但要注意求解 g 时，只能进行 n 次DP，即对每个 i ，计算出 h[i:n][0:max] 的值，否则会T。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">const int MAXN=180,MAXM=60;</span><br><span class="line">int n,m,t,a[MAXN],z[MAXN];</span><br><span class="line">int f[MAXN][MAXM];  // f[i][j]: 1:i，组成 j ，最大的照度</span><br><span class="line">int g[MAXN][MAXN];  // g[i][j]: i:j 为一组，最大照度</span><br><span class="line">int h[50*MAXN];</span><br><span class="line"></span><br><span class="line">int main(void)&#123;</span><br><span class="line">  scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;t);</span><br><span class="line">  FORR(i,1,n) scanf(&quot;%d%d&quot;,&amp;a[i],&amp;z[i]);</span><br><span class="line"></span><br><span class="line">  FORR(i,1,n)&#123;  // n次DP</span><br><span class="line">    MST(h,0); int lim=(n-i+1)*t;  // 最大的功率限制</span><br><span class="line">    FORR(j,i,n)&#123;</span><br><span class="line">      if(a[j]&lt;=lim) ROR(k,lim,a[j])</span><br><span class="line">        h[k] = max(h[k], h[k-a[j]]+z[j]);</span><br><span class="line">      g[i][j] = h[(j-i+1)*t];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  FORR(i,1,n) FORR(j,1,min(i,m)) FOR(k,j-1,i)&#123;</span><br><span class="line">    f[i][j] = max(f[i][j], f[k][j-1] + g[k+1][i]);</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;%d\n&quot;,f[n][m]);</span><br><span class="line"></span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h1&gt;&lt;p&gt;给定一排 n 个路灯，将其分成 m 组，使得总亮度最大。每个路灯有功率 a 和照度 z 两个属性；每组打开的灯功率之和不大于 &lt;code&gt;t * 该组路灯数量(包括灭的)&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="DP" scheme="https://thebesttv.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>[UVA 1025] A Spy in the Metro</title>
    <link href="https://thebesttv.github.io/2019/09/15/UVA_1025_A_Spy_in_the_Metro/"/>
    <id>https://thebesttv.github.io/2019/09/15/UVA_1025_A_Spy_in_the_Metro/</id>
    <published>2019-09-15T12:15:00.000Z</published>
    <updated>2019-09-16T06:52:37.971Z</updated>
    
    <content type="html"><![CDATA[<p>哇！这是我来南理工的第一份题解 XD<br>虽然被两场比赛摧残得挺厉害，但 I’m still here, alive!</p><a id="more"></a><h1 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h1><p>一条双向的地铁路线有 n 站，有 m1 辆车从起点出发，有 m2 辆车从终点出发。从站台 1 出发，在 T 时间要到达站台 n 。在每个站台可以等待，或乘上列车（当车恰好在此停靠时），求最小的等待时间。</p><h1 id="解题报告"><a href="#解题报告" class="headerlink" title="解题报告"></a>解题报告</h1><p>Emm 感觉这道题光DP不算难，然而还有一个坑点……</p><p>首先，只有两种可能，要么在车上，要么在车站等待。在车上是无意义的，因为它对“最小等待时间”和“到达n的时间”都没有影响，因此只需考虑在车站等待的情况。<br>“在车站”的状态需要用时间 i 和站台序号 j 表示。在任意车站都只有三种决策：继续等待一分钟（wait)、乘上向前开的车(forward)、乘上向后开的车(backward)。</p><p>那么就只需令 f[i][j] 表示在 i 时间、j 站台，想要准时到达终点的最小等待时间。如果不能到达终点，则等待时间为正无穷。为了判断在状态(i,j)是否有车，令 hasTrain[i][j][0/1] 表示当前是否有向前/向后的车，令 duration[i] 表示从站台 i 到 i+1 所需时间。根据三种决策，有：</p><p>\begin{split}<br>f(i,j) = min \{ &amp;f(i+1,j) + 1, \\<br>&amp;f( i + duration(j) , j+1), \\<br>&amp;f( i + duration(j-1), j-1) \}<br>\end{split}</p><p>转化为代码时，要注意用 INF 表示不能到达。边界条件为 f[t][n]=0，答案为 f[0][1]。</p><p>还要注意坑点：因为要求在 t 时刻到达 n ，那么超过 t 的就不算了。但在计算 hasTrain 时，有些列车的到站时间是大于 t 的，要及时停止，否则一不注意就会 RE 或者 WA 了……</p><h2 id="递推"><a href="#递推" class="headerlink" title="递推"></a>递推</h2><p>因为时间是单向流动的，每一次计算 f[i][j] 都是利用更大的 i ，因此可以从边界条件开始根据 i 逆序递推。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">60</span>,MAXT=<span class="number">220</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n,t,duration[MAX];</span><br><span class="line"><span class="keyword">int</span> m1,m2,d1[MAX],d2[MAX];</span><br><span class="line"><span class="keyword">int</span> f[MAXT][MAX];</span><br><span class="line"><span class="keyword">bool</span> hasTrain[MAXT][MAX][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> kase=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)==<span class="number">1</span> &amp;&amp; n)&#123;</span><br><span class="line">    <span class="comment">// init</span></span><br><span class="line">    MST(hasTrain,<span class="number">0</span>);  <span class="comment">// &lt;b&gt;clear all!!!&lt;/b&gt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    FOR(i,<span class="number">1</span>,n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;duration[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m1); FORR(i,<span class="number">1</span>,m1) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d1[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m2); FORR(i,<span class="number">1</span>,m2) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d2[i]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cal arrival time</span></span><br><span class="line">    <span class="comment">// forward</span></span><br><span class="line">    FORR(i,<span class="number">1</span>,m1)&#123;</span><br><span class="line">      <span class="keyword">int</span> s=d1[i]; hasTrain[s][<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">      FORR(j,<span class="number">2</span>,n)&#123;</span><br><span class="line">        s+=duration[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s&gt;t) <span class="keyword">break</span>;  <span class="comment">// &lt;b&gt; &lt;/b&gt;</span></span><br><span class="line">        hasTrain[s][j][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// backward</span></span><br><span class="line">    FORR(i,<span class="number">1</span>,m2)&#123;</span><br><span class="line">      <span class="keyword">int</span> s=d2[i]; hasTrain[s][n][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">      ROR(j,n<span class="number">-1</span>,<span class="number">1</span>)&#123;</span><br><span class="line">        s+=duration[j];</span><br><span class="line">        <span class="keyword">if</span>(s&gt;t) <span class="keyword">break</span>;  <span class="comment">// &lt;b&gt; &lt;/b&gt;</span></span><br><span class="line">        hasTrain[s][j][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">    <span class="comment">// 长长一坨调试……</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"***\n"</span>);</span><br><span class="line">    FORR(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"station %d:"</span>,i);</span><br><span class="line">      FORR(j,<span class="number">0</span>,T) <span class="keyword">if</span>(hasTrain[j][i][<span class="number">0</span>]) <span class="built_in">printf</span>(<span class="string">" %d"</span>,j);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"***\n"</span>);</span><br><span class="line">    FORR(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"station %d:"</span>,i);</span><br><span class="line">      FORR(j,<span class="number">0</span>,T) <span class="keyword">if</span>(hasTrain[j][i][<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">" %d"</span>,j);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//dp</span></span><br><span class="line">    MST(f,<span class="number">0x3f</span>); f[t][n]=<span class="number">0</span>;</span><br><span class="line">    ROR(i,t<span class="number">-1</span>,<span class="number">0</span>) FORR(j,<span class="number">1</span>,n)&#123;</span><br><span class="line">      <span class="keyword">int</span> &amp;a=f[i][j];</span><br><span class="line"></span><br><span class="line">      <span class="comment">// wait</span></span><br><span class="line">      a = min(a,f[i+<span class="number">1</span>][j]+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// forward</span></span><br><span class="line">      <span class="keyword">if</span>(hasTrain[i][j][<span class="number">0</span>] &amp;&amp; i+duration[j]&lt;=t)&#123;</span><br><span class="line">        a = min(a, f[i+duration[j]][j+<span class="number">1</span>]);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// backward</span></span><br><span class="line">      <span class="keyword">if</span>(hasTrain[i][j][<span class="number">1</span>] &amp;&amp; i+duration[j<span class="number">-1</span>]&lt;=t)&#123;</span><br><span class="line">        a = min(a, f[i+duration[j<span class="number">-1</span>]][j<span class="number">-1</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Case Number %d: "</span>,++kase);</span><br><span class="line">    <span class="keyword">if</span>(f[<span class="number">0</span>][<span class="number">1</span>]&lt;INF) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"impossible\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="记忆化"><a href="#记忆化" class="headerlink" title="记忆化"></a>记忆化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">60</span>,MAXT=<span class="number">220</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n,t,duration[MAX];</span><br><span class="line"><span class="keyword">int</span> m1,m2,d1[MAX],d2[MAX];</span><br><span class="line"><span class="keyword">int</span> f[MAXT][MAX];</span><br><span class="line"><span class="keyword">bool</span> hasTrain[MAXT][MAX][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> &amp;a=f[i][j];</span><br><span class="line">  <span class="keyword">if</span>(a!=<span class="number">-1</span>) <span class="keyword">return</span> a;</span><br><span class="line">  a=INF;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// wait</span></span><br><span class="line">  <span class="keyword">if</span>(i&lt;t) a = min(a, dp(i+<span class="number">1</span>,j)+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// forward</span></span><br><span class="line">  <span class="keyword">if</span>(hasTrain[i][j][<span class="number">0</span>] &amp;&amp; i+duration[j]&lt;=t)&#123;</span><br><span class="line">    a = min(a, dp(i+duration[j],j+<span class="number">1</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// backward</span></span><br><span class="line">  <span class="keyword">if</span>(hasTrain[i][j][<span class="number">1</span>] &amp;&amp; i+duration[j<span class="number">-1</span>]&lt;=t)&#123;</span><br><span class="line">    a = min(a, dp(i+duration[j<span class="number">-1</span>],j<span class="number">-1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> kase=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)==<span class="number">1</span> &amp;&amp; n)&#123;</span><br><span class="line">    <span class="comment">// init</span></span><br><span class="line">    MST(hasTrain,<span class="number">0</span>);  <span class="comment">// &lt;b&gt;clear all!!!&lt;/b&gt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    FOR(i,<span class="number">1</span>,n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;duration[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m1); FORR(i,<span class="number">1</span>,m1) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d1[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m2); FORR(i,<span class="number">1</span>,m2) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d2[i]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cal arrival time</span></span><br><span class="line">    <span class="comment">// forward</span></span><br><span class="line">    FORR(i,<span class="number">1</span>,m1)&#123;</span><br><span class="line">      <span class="keyword">int</span> s=d1[i]; hasTrain[s][<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">      FORR(j,<span class="number">2</span>,n)&#123;</span><br><span class="line">        s+=duration[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s&gt;t) <span class="keyword">break</span>;  <span class="comment">// &lt;b&gt; &lt;/b&gt;</span></span><br><span class="line">        hasTrain[s][j][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// backward</span></span><br><span class="line">    FORR(i,<span class="number">1</span>,m2)&#123;</span><br><span class="line">      <span class="keyword">int</span> s=d2[i]; hasTrain[s][n][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">      ROR(j,n<span class="number">-1</span>,<span class="number">1</span>)&#123;</span><br><span class="line">        s+=duration[j];</span><br><span class="line">        <span class="keyword">if</span>(s&gt;t) <span class="keyword">break</span>;  <span class="comment">// &lt;b&gt; &lt;/b&gt;</span></span><br><span class="line">        hasTrain[s][j][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//dp</span></span><br><span class="line">    MST(f,<span class="number">-1</span>); f[t][n]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=dp(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Case Number %d: "</span>,++kase);</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;INF) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"impossible\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;哇！这是我来南理工的第一份题解 XD&lt;br&gt;虽然被两场比赛摧残得挺厉害，但 I’m still here, alive!&lt;/p&gt;
    
    </summary>
    
    
      <category term="DP" scheme="https://thebesttv.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下的截图大法</title>
    <link href="https://thebesttv.github.io/2019/08/23/Linux_screenshot/"/>
    <id>https://thebesttv.github.io/2019/08/23/Linux_screenshot/</id>
    <published>2019-08-23T08:58:00.000Z</published>
    <updated>2019-08-23T10:09:09.861Z</updated>
    
    <content type="html"><![CDATA[<p>看来 Linux 下想要截图还是有出路的！</p><img src="/2019/08/23/Linux_screenshot/2.png" title="效果图"><a id="more"></a><p>本来只会用一个 <code>PrintScreen</code> 键，现在发现 Linux 下原来还有不少截图工具。</p><h1 id="GUI-下截图"><a href="#GUI-下截图" class="headerlink" title="GUI 下截图"></a>GUI 下截图</h1><p>日常当然用 GUI ，Gnome 原生的 <code>gnome-screenshot</code> 不错，GitHub上的 <code>Flameshot</code> 也很方便。</p><h2 id="gnome-screenshot"><a href="#gnome-screenshot" class="headerlink" title="gnome-screenshot"></a>gnome-screenshot</h2><p>可以直接打开程序，也可指定参数。用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnome-screenshot [OPTION]... [-e EFFECT] [-f FILENAME]</span><br></pre></td></tr></table></figure><p>其中选项有：</p><ul><li><code>-c, --clipboard</code>: 将结果保存至剪贴板</li><li><code>-w, --window</code>: 截取当前 active window</li><li><code>-a, --area</code>: 截取特定部分</li><li><code>-d, --delay=SECONDS</code>: 延时</li><li><code>-e, --border-effect=EFFECT</code>: 边框效果（感觉只有 <code>shadow</code> 看得过去……）</li><li><code>-f FILENAME</code>: 就是保存文件名了</li></ul><p>按照习惯重新设置了一下快捷键，感觉还是很好的 hh</p><img src="/2019/08/23/Linux_screenshot/1.png" title="敲方便的快捷键"><h2 id="Flameshot"><a href="#Flameshot" class="headerlink" title="Flameshot"></a>Flameshot</h2><p>动画特效真是太帅啦！直接安装 <code>flameshot</code> 即可，用起来也很方便，基本不用靠命令行，就不说了。</p><h1 id="CMI-下截图"><a href="#CMI-下截图" class="headerlink" title="CMI 下截图"></a>CMI 下截图</h1><p>这才是比较累人的……可以用 <code>fbgrab</code> 截取图片，也可以用 <code>setterm</code> 只导出屏幕文字。<strong>注：两者都需 root 权限</strong></p><h2 id="fbgrab-amp-fbcat"><a href="#fbgrab-amp-fbcat" class="headerlink" title="fbgrab &amp; fbcat"></a>fbgrab &amp; fbcat</h2><img src="/2019/08/23/Linux_screenshot/3.png"><p>安装 <code>fbcat</code> ，就可以用 <code>fbgrab</code> 截png了。使用时需要 root 权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fbgrab [OPTION]... FILENAME</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li><code>-c N</code>: 截取 <code>/dev/ttyN</code> 的屏幕（不切换到那个tty）</li><li><code>-C N</code>: 先切换到 <code>/dev/ttyN</code> ，过几秒后截屏，再切换至原来屏幕</li></ul><p>省略 <code>-c|-C</code> 可以直接在当前终端截图，不过最后一行会留下 <code>fbgrab</code> 的命令……所以还是建议切换到其他终端再截图。</p><p><code>fbcat</code> 也可以截图，不过结果是从 stdout 输出的 PPM 格式图片，就不说了。</p><h2 id="setterm"><a href="#setterm" class="headerlink" title="setterm"></a>setterm</h2><p>这里就只介绍与截屏有关的选项了（别的不会 XD）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setterm --dump [N] [--file FILENAME]</span><br></pre></td></tr></table></figure><ul><li><code>--dump [N]</code>: 导出终端文本。默认截取当前控制台，可指定 <code>ttyN</code> 。</li><li><code>--file FILENAME</code>: 保存文件名。默认保存在当前目录的 <code>screen.dump</code> 文件中。</li></ul><p>照样要 root 权限，照样可以切换控制台防止丑丑的一行 <code>setterm</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看来 Linux 下想要截图还是有出路的！&lt;/p&gt;
&lt;img src=&quot;/2019/08/23/Linux_screenshot/2.png&quot; title=&quot;效果图&quot;&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://thebesttv.github.io/categories/Linux/"/>
    
      <category term="tools" scheme="https://thebesttv.github.io/categories/Linux/tools/"/>
    
    
      <category term="Linux" scheme="https://thebesttv.github.io/tags/Linux/"/>
    
      <category term="奇技淫巧" scheme="https://thebesttv.github.io/tags/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Linux 奇技淫巧整理</title>
    <link href="https://thebesttv.github.io/2019/08/23/Linux_tools/"/>
    <id>https://thebesttv.github.io/2019/08/23/Linux_tools/</id>
    <published>2019-08-22T16:00:00.000Z</published>
    <updated>2019-08-23T11:17:38.321Z</updated>
    
    <content type="html"><![CDATA[<p>集合各种 Linux 的教程。</p><a id="more"></a><ul><li><a href="https://linux.cn/article-11258-1.html" target="_blank" rel="noopener">如何更改 Linux 控制台字体类型和大小</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;集合各种 Linux 的教程。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://thebesttv.github.io/categories/Linux/"/>
    
      <category term="tools" scheme="https://thebesttv.github.io/categories/Linux/tools/"/>
    
    
      <category term="Linux" scheme="https://thebesttv.github.io/tags/Linux/"/>
    
      <category term="tools" scheme="https://thebesttv.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>pdftk 教程</title>
    <link href="https://thebesttv.github.io/2019/08/16/pdftk_notes/"/>
    <id>https://thebesttv.github.io/2019/08/16/pdftk_notes/</id>
    <published>2019-08-16T03:05:00.000Z</published>
    <updated>2019-08-16T06:45:55.855Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/08/16/pdftk_notes/pdftk_logo.png"><p>pdftk 是一款以页为单位的 pdf 编辑工具，可以对 pdf 进行合并、拆分、旋转、加密、解密、添加水印等。它还可以对 pdf 表格进行操作，不过在这里就不讨论了（不会 hh）</p><p>说不定大学就要用到呢 :p</p><a id="more"></a><h1 id="主要语法"><a href="#主要语法" class="headerlink" title="主要语法"></a>主要语法</h1><p>因为我目前对 pdf 的加密原理不清楚，也不清楚 user 和 owner 两个pwd的区别，这里暂时不会详细讨论 pdftk 的加密、解密功能，只会点到为止。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pdftk &lt;input PDF files | - | PROMPT&gt;</span><br><span class="line">     [ input_pw &lt;input PDF owner passwords | PROMPT&gt; ]</span><br><span class="line">     [ &lt;operation&gt; &lt;operation arguments&gt; ]</span><br><span class="line">     [ output &lt;output filename | - | PROMPT&gt; ]</span><br><span class="line">     [ owner_pw &lt;owner password | PROMPT&gt; ]</span><br><span class="line">     [ user_pw &lt;user password | PROMPT&gt; ]</span><br><span class="line">     [ compress | uncompress ]</span><br><span class="line">     [ verbose ] [ dont_ask | do_ask ]</span><br></pre></td></tr></table></figure><p>看起来有点吓人，其实是很好理解的：</p><ul><li><p><code>&lt;input PDF files | - | PROMPT&gt;</code>: pdftk 的第一个 option，一定要有的输入文件。<br>有三种输入方法，第一种可以 customize ，后两种只能输入一个文件。</p><ol><li><p><code>input PDF files</code>: 文件名输入。可以输入任意个数的文件，<strong>有顺序</strong>。为了之后操作，可以给每个文件设置一个 handle ，handle 必须为大写字母。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pdftk f1.pdf f2.pdf ... # 之后都以输入顺序为准</span><br><span class="line">pdftk A=f1.pdf LALALA=f2.pdf HAHAHA=f3.pdf ...</span><br><span class="line">  # 可以使用 handle 任意指定顺序</span><br></pre></td></tr></table></figure></li><li><p><code>-</code>: 从 stdin 读入一个pdf。</p></li><li><p><code>PROMPT</code>: 在启动程序后交互式输入，但只能输入一个文件。</p></li></ol></li><li><p><code>input_pw &lt;input PDF owner passwords | PROMPT&gt;</code>: 输入文件密码。<br>两种密码具有优先级，owner pwd 优先于 user pwd，即：只要设置了 owner pwd ，就一定要提供 owner pwd；否则，就只需提供 user pwd 或不提供。</p></li><li><p><code>&lt;operation&gt; &lt;operation arguments&gt;</code>: 对pdf的各种操作，有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat | shuffle | burst | rotate |</span><br><span class="line">background | multibackground |</span><br><span class="line">stamp | multistamp |</span><br><span class="line">attach_files | unpack_files</span><br></pre></td></tr></table></figure><ul><li><p><code>cat [&lt;page ranges&gt;]</code>: 用于以各种方式组合 pdf 页面。如果省略 page ranges ，就将所有 pdf 按输入顺序组合。对 <code>page ranges</code> 的讲解见下文。</p></li><li><p><code>shuffle [&lt;page ranges&gt;]</code>: 类似于 cat ，但组合的方法是按顺序从每个 page range 中分别取一页，循环往复。适合将奇数页pdf和偶数页pdf合并。</p></li><li><p><code>burst</code>: 将完整的 pdf 拆分成单页pdf。输出包含多个pdf，可以用 printf 的方式控制输出的格式（有且只有一个<code>%d</code>操作符用于标记页码，从1开始）如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pdftk range.pdf burst output page-%02d.pdf</span><br><span class="line"><span class="comment"># 输出为 page-01.pdf page-02.pdf ... page-99.pdf</span></span><br></pre></td></tr></table></figure></li><li><p><code>rotate [&lt;page ranges]</code>: 给一个pdf旋转页面。与 cat 不同的是：</p><ol><li>rotate 旋转了指定页面后，其他未指定的页面不会改变，依旧<strong>照常输出</strong>。而 cat 中没有列出的页面不会被输出。</li><li>rotate 只接受<strong>一个</strong>pdf，因此输入也只能是一个。而 cat 则接受任意多个。</li><li>page ranges 的语法于 cat 类似，但没有了 handle 。</li></ol></li><li><p><code>background &lt;background PDF filename | - | PROMPT&gt;</code>: 添加水印。<br>水印被放在源pdf图层的底层充当背景，需要所有被添加水印的pdf背景都为透明，否则水印不可见。</p></li><li><p><code>multibackground &lt;background PDF filename | - | PROMPT&gt;</code>: 一一对应水印。<br>水印文件不止一页，输出文件每一页都打上相对应的水印。如果水印页不够，剩下页面的就打上最后一面的水印。</p></li><li><p><code>stamp &lt;stamp PDF filename | - | PROMPT&gt;</code><br>类似于水印，但水印在图层顶部。可以解决源文档背景不透明的问题，但水印必须透明。</p></li><li><p><code>multistamp &lt;stamp PDF filename | - | PROMPT&gt;</code>: 一样，不说了。</p></li><li><p><code>attach_files &lt;attachment filenames | PROMPT&gt; [to_page &lt;page number | PROMPT&gt;]</code>: 附加文件。<br>向 pdf 添加任意多个外部文件，默认添加到在末尾，也可以通过 <code>to_page</code> 指定一个页面。</p></li><li><p><code>unpack_files</code>: 提取附加的文件。在此不会输出 pdf ，但可以使用 <code>output</code> 指定提取之后存放的<strong>目录</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdftk ori.pdf unpack_files output ./attachments/</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>output &lt;output filename | - | PROMPT&gt;</code>: 指定输出。</p><ol><li>指定pdf文件名。除了采用 <code>burst</code> 操作会导致输出多个文件，其他的只会输出一个文件，没什么可说。</li><li>指定目录。当指定 <code>unpack_files</code> 操作时，可以指定到目标<strong>目录</strong>。</li></ol></li><li><p><code>owner_pw &lt;owner password | PROMPT&gt;</code>: 添加 owner pwd 。</p></li><li><p><code>user_pw &lt;user password | PROMPT&gt;</code>: 添加 user pwd 。<br>无论添加了 owner pwd 还是以 uwer pwd，权限默认都被取消。可以使用 <code>allow</code> 指定打开的权限，但不在本文讨论范围内 XD</p></li><li><p><code>compress</code>和<code>uncompress</code>:  是否压缩pdf。<br>如果不压缩的话，可以以纯文本形式打开 pdf 进行编辑（乱搞）。</p></li><li><p><code>verbose</code>: 输出详情。</p></li><li><p><code>do_ask</code>和<code>dont_ask</code>: 当遇到问题时，是否提示用户。<br>感觉这两个选项的行为挺模糊的……<br>反正 pdftk 默认会覆盖文件，设置 <code>do_ask</code> 可以提示，防止误伤；<code>dont_ask</code> 则像 <code>rm -f</code> 一样 XD<br>建议小心一点，经常用一下 <code>do_ask</code> 就行啦。</p></li></ul><h1 id="page-ranges-专场"><a href="#page-ranges-专场" class="headerlink" title="page ranges 专场"></a>page ranges 专场</h1><h2 id="cat下的page-range"><a href="#cat下的page-range" class="headerlink" title="cat下的page range"></a>cat下的page range</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[&lt;input PDF handle&gt;][&lt;begin page number&gt;[-&lt;end page number&gt;[&lt;qualifier&gt;]]][&lt;page rotation&gt;]</span><br><span class="line"># 把它拆得友好一点：</span><br><span class="line">[&lt;input PDF handle&gt;]    # 指定 pdf 的 handle，如果有多个文件，建议使用</span><br><span class="line">  [&lt;begin page number&gt;  # 起始</span><br><span class="line">    [-&lt;end page number&gt; # 结束</span><br><span class="line">      [&lt;qualifier&gt;]     # even|odd: 指定奇数页或偶数页</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">  [&lt;page rotation&gt;]     # 旋转方向，有相对和绝对两种</span><br></pre></td></tr></table></figure><ul><li>如果省略 handle ，会使用整个 pdf 文档。单文件时没有问题，但多文件时建议使用。</li><li>如果省略开始和结尾页码，表示使用整个pdf 。</li><li>如果所有文档的开始、结尾页码都被省去，只保留 handle 则书签被保留，否则书签不被保留。有多个文件时书签会被自动修改，保证指向正确。</li><li>页码从1开始，不是阅读器里显示的<code>xv</code>,<code>iii</code>等的页码。</li><li>页码除了数字，还有<code>end</code>，表示文末</li><li>起始页码可以小于结束页码，此时为<strong>倒序读取</strong>。</li><li>对每个页码，可以用前缀<code>r</code>修饰，表示从文末开始数，相当于<code>-n</code>页。<code>r1</code>表示最后一页，<code>r1-r3</code>表示从最后一页到倒数第三页，倒序读取。</li><li><code>qualifier</code>: <code>even</code>或<code>odd</code>，用于奇数页文档和偶数页文档的合并。</li><li>旋转有相对方向 <code>left</code>, <code>right</code>, <code>down</code> ，分别表示向左转，向右转，和旋转半周；有绝对方向 <code>north</code>, <code>south</code>, <code>west</code>, <code>east</code> ，按照上北下南左西右东的方向控制角度。pdf 文档每页都有一个角度变量标志该页的方向，相对方向的旋转相当于对角度进行加减运算，绝对方向的旋转则为赋值运算。</li></ul><h2 id="其他的-page-range"><a href="#其他的-page-range" class="headerlink" title="其他的 page range"></a>其他的 page range</h2><p>cat 的 page range 可以说是最全的了，其他选项下的 page range 完全可以根据对应选项的作用适当省去一些。</p><ul><li><code>rotate</code> 下但没有 handle ，因为只有一个文件</li><li><code>shuffle</code> 只需页码范围（如果只指定一页，那么它只会在第一次被添加到输出，之后就没有了，像封面一样）</li></ul><p>就偷个懒，贴一下 man page 上的例子吧 XD</p><ul><li>Page Range Examples without Handles:<ol><li><code>1-endeast</code> - rotate entire document 90 degrees</li><li><code>5 11 20</code> - take single pages from input PDF</li><li><code>5-25oddwest</code> - take odd pages in range, rotate 90 degrees</li><li><code>6-1</code> - reverse pages in range from input PDF</li></ol></li><li>Page Range Examples Using Handles:<br><code>A=in1.pdf, B=in2.pdf</code><ol><li><code>A1-21</code> - take range from in1.pdf</li><li><code>Bend-1odd</code> - take all odd pages from in2.pdf in reverse order</li><li><code>A72</code> - take a single page from in1.pdf</li><li><code>A1-21 Beven A72</code> - assemble pages from both in1.pdf and in2.pdf</li><li><code>Awest</code> - rotate entire in1.pdf document 90 degrees</li><li><code>B</code> - use all of in2.pdf</li><li><code>A2-30evenleft</code> - take the even pages from the range, remove 90 degrees from each page’s rotation</li><li><code>A A</code> - catenate in1.pdf with in1.pdf</li><li><code>Aevenwest Aoddeast</code> - apply rotations to even pages, odd pages from in1.pdf</li><li><code>Awest Bwest Bdown</code> - catenate rotated documents</li></ol></li></ul><h1 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pdftk Linux.pdf cat 1-10 output range.pdf</span><br><span class="line">pdftk range.pdf burst output page%02d.pdf</span><br><span class="line"></span><br><span class="line">pdftk range.pdf background bg.pdf output backgrounded.pdf</span><br><span class="line">pdftk range.pdf stamp bg.pdf output stamped.pdf</span><br><span class="line"></span><br><span class="line">pdftk range.pdf output secured.pdf owner_pw hahaha user_pw lalala</span><br><span class="line">pdftk range.pdf output owner.pdf owner_pw ownerpass</span><br><span class="line">pdftk range.pdf output user.pdf user_pw userpass</span><br><span class="line"></span><br><span class="line">pdftk secured.pdf input_pw hahaha output unlocked1.pdf</span><br><span class="line">pdftk owner.pdf input_pw ownerpass output unlocked2.pdf</span><br><span class="line">pdftk user.pdf input_pw userpass output unlocked3.pdf</span><br><span class="line"></span><br><span class="line">pdftk range.pdf  attach_files f1.rar f2.jpg f3.html output attached.pdf</span><br><span class="line">pdftk attached.pdf unpack_files output ./attachments/</span><br></pre></td></tr></table></figure><p>还有官网的<a href="https://www.pdflabs.com/docs/pdftk-cli-examples/" target="_blank" rel="noopener">栗子</a> :)</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>诶呀，总算差不多写完了！之后可能还有一些小工具的教程，算是为了未来的复习吧 hh</p><p>再过 11 天就要去南理工报道了，这段时间被某人坑了一下，还要看Python的二级教材……简直无奈。就当作复习吧。</p><img src="/2019/08/16/pdftk_notes/XD.jpg">]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/08/16/pdftk_notes/pdftk_logo.png&quot;&gt;
&lt;p&gt;pdftk 是一款以页为单位的 pdf 编辑工具，可以对 pdf 进行合并、拆分、旋转、加密、解密、添加水印等。它还可以对 pdf 表格进行操作，不过在这里就不讨论了（不会 hh）&lt;/p&gt;
&lt;p&gt;说不定大学就要用到呢 :p&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://thebesttv.github.io/categories/Linux/"/>
    
      <category term="tools" scheme="https://thebesttv.github.io/categories/Linux/tools/"/>
    
    
      <category term="notes" scheme="https://thebesttv.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Bash 的 Vi 模式</title>
    <link href="https://thebesttv.github.io/2019/08/15/bash_with_vi/"/>
    <id>https://thebesttv.github.io/2019/08/15/bash_with_vi/</id>
    <published>2019-08-15T07:06:00.000Z</published>
    <updated>2019-08-15T12:16:42.684Z</updated>
    
    <content type="html"><![CDATA[<p>突然发现 bash 有个 Vi 模式，真是太方便了！</p><a id="more"></a><p>Linux 下有一个 library call 为<code>readline</code>，是许多程序命令行下的单行编辑函数。它提供了两种模式<code>emacs</code>和<code>vi</code>，默认为<code>emacs</code>。</p><h1 id="设置-readline"><a href="#设置-readline" class="headerlink" title="设置 readline"></a>设置 readline</h1><p>可以通过文件 <code>~/.inputrc</code> 配置 readline，每条命令格式为 <code>set &lt;variable-name&gt; &lt;value&gt;</code> 的形式。这里介绍一下我用到的命令。（详情见man文档）<br>开头为 variable-name ，value有字符串，也有布尔值（<code>on/1</code>为真，<code>off/0</code>为假）。</p><ul><li><p><code>editing-mode</code>: <code>vi</code>或<code>emacs</code><br>配置 readline 所在的模式。Vi 模式类似于vim，分为<code>insert</code>和<code>command</code>模式，每次 prompt 默认处于插入模式，按下<code>ESC</code>退出为命令模式。</p></li><li><p><code>show-mode-in-prompt</code>: <code>on</code><br>在 Vi 模式下，是否在每个 prompt 开头显示当前模式，默认用<code>(ins)</code>和<code>(cmd)</code>表示两个模式。</p></li><li><p><code>vi-cmd-mode-string</code>: <code>\033[1;33mc-</code><br>配置命令模式下的模式提示符。<br>突然发现一开始确实没什么问题，但如果命令长了，在首尾跳跃多次后就会出现光标偏移的状况……也没法设置不打印字符……Anyway就暂时不设置颜色吧……<br><del>与 <code>PS1</code>, <code>PS2</code> 类似，可以接受 ANSI escape code 从而控制颜色、下划线等。不过由于它与 <code>PS1</code> 无关，bash无需计算它的字符长度，也就不需要像<code>PS1</code>中一样用<code>\[</code>和<code>\]</code>包裹 non-printing 字符，直接输入即可。在此我设置的是黄色的<code>c-</code>（看起来甚至像是暗金色hh）。</del><br>关于控制颜色的详情可以阅读 <em>The Linux Command Line</em> 一书第13章：Customizing the Prompt。</p></li><li><p><code>vi-ins-mode-string</code>: <code>\033[1;33mi-</code><br>类似，配置插入模式下的模式提示符。在此为黄色的<code>i-</code></p></li><li><p><code>bell-style</code>: <code>none</code><br>对终端响铃<code>\a</code>的反应。</p></li><li><p><code>blink-matching-paren</code>: <code>on</code><br>如果有一长串包含括号的命令，在输入右括号时会显示其对应的左括号。</p></li><li><p><code>colored-completion-prefix</code>: <code>on</code><br>把自动补全列表中的 common prefix 上色</p></li><li><p><code>colored-stats</code>: <code>on</code><br>将自动补全列表中的文件用颜色区别类型。超好玩 hh</p></li><li><p><code>completion-ignore-case</code>: <code>on</code><br>自动补全时不区分大小写。</p></li><li><p><code>enable-bracketed-paste</code>: <code>on</code><br>控制对粘贴的文本的处理，开启表示将文本当作普通的字符串，关闭表示将文本当作键盘输入。<br>看起来区别不大，但是这决定了终端是否对文本中的回车等字符作出反应。比如，有时偷个懒，直接把网上的命令复制粘贴到终端，如果一不小心复制了最后的回车，那说不定就悲剧了。开启了这一选项可以防止此类事件的发生。</p></li></ul><h1 id="Vi模式的使用"><a href="#Vi模式的使用" class="headerlink" title="Vi模式的使用"></a>Vi模式的使用</h1><p>其实……对我这样的轻度使用者，也就好了一点吧，不过心理上还是很安慰的，终于不用看到那么多快捷键了 hh</p><p>……<br>……<br>……<br>……<br>……</p><p>真的不用吗……想多了。Vi模式还是有不少快捷键的，这里提供一份 <a href="https://catonmat.net/" target="_blank" rel="noopener">CATONMAT</a> 网站的 <a href="https://catonmat.net/ftp/bash-vi-editing-mode-cheat-sheet.pdf" target="_blank" rel="noopener">Cheat Sheet</a>。</p><embed width="100%" height="512px" src="bash-vi-editing-mode-cheat-sheet.pdf" type="application/pdf" internalinstanceid="15">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;突然发现 bash 有个 Vi 模式，真是太方便了！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://thebesttv.github.io/categories/Linux/"/>
    
      <category term="Bash" scheme="https://thebesttv.github.io/categories/Linux/Bash/"/>
    
    
      <category term="notes" scheme="https://thebesttv.github.io/tags/notes/"/>
    
      <category term="bash" scheme="https://thebesttv.github.io/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>V2Ray Notes</title>
    <link href="https://thebesttv.github.io/2019/08/14/v2ray_notes/"/>
    <id>https://thebesttv.github.io/2019/08/14/v2ray_notes/</id>
    <published>2019-08-14T07:43:00.000Z</published>
    <updated>2019-08-14T14:16:10.198Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个初级的 V2Ray 教程，主要为了阐明配置文件的结构，解释基本配置，并提供一个简明的模板，以便日后查阅、复习、深入。</p><a id="more"></a><h1 id="v2ray-简介"><a href="#v2ray-简介" class="headerlink" title="v2ray 简介"></a>v2ray 简介</h1><blockquote><p>Project V 是一个工具集合，它可以帮助你打造专属的基础通信网络。Project V 的核心工具称为 V2Ray ，其主要负责网络协议和功能的实现，与其它 Project V 通信。V2Ray 可以单独运行，也可以和其它工具配合，以提供简便的操作流程。</p></blockquote><p>V2Ray 是 Project V 的核心工具，主要用来代理各种流量。不像其他的 VPN 或 SS/SSR ，它没有服务器、客户端的区分。每个安装了 V2Ray 的计算机都是一个中继节点，将 inbounds 中的传入流量，根据 routing 的路由配置，发送到对应的 outbounds 中。Traditionally，在一条传送链上，位于首、尾的计算机可以看作服务器、客户端。</p><h1 id="安装、升级与日常命令"><a href="#安装、升级与日常命令" class="headerlink" title="安装、升级与日常命令"></a>安装、升级与日常命令</h1><p>Linux 下，可以直接使用官方提供的脚本来安装。<br>下载脚本，然后以管理员身份安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://install.direct/go.sh</span><br><span class="line">sudo bash go.sh</span><br></pre></td></tr></table></figure><p>升级时，再次运行安装程序即可。</p><p>在已有代理服务器的情况下，可以通过 <code>-p</code> 参数指定代理服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo bash go.sh -p <span class="string">"socks5://127.0.0.1:1080"</span></span><br><span class="line">sudo bash go.sh -p <span class="string">"http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure><p>可执行文件 <code>v2ray</code> 和 <code>v2ctl</code> 位于 <code>/bin/v2ray/</code> 目录下。配置文件位于 <code>/etc/v2ray/config.json</code> ，每次更改建议先进行备份。<br>每次改变配置后，最好先检查一下配置文件的正确性，正确无误后再重启服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/v2ray/v2ray --<span class="built_in">test</span> --config /etc/v2ray/config.json</span><br><span class="line">sudo systemctl restart v2ray</span><br></pre></td></tr></table></figure><h1 id="配置文件-rundown"><a href="#配置文件-rundown" class="headerlink" title="配置文件 rundown"></a>配置文件 rundown</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"api"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"dns"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"stats"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"policy"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"reverse"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"inbounds"</span>: [],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [],</span><br><span class="line">  <span class="attr">"transport"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个配置文件都有 10 个字段，每个字段可进一步展开成具体配置。但本文只会涉及 <code>log</code>, <code>inbounds</code>, <code>outbounds</code>, <code>routing</code> 这四个字段（其余保持默认），且只考虑 <code>客户端 -&gt; 服务器</code> 的方向。<strong>注意，最好将配置文件中默认的、不需要的配置都删除，否则可能报错无法启动。</strong></p><p><code>inbounds</code> 和 <code>outbounds</code> 都为数组，配置了多个不同的入站和出站。<code>routing</code> 为路由表，每个传入流量都会参考它。它控制着每个传入流量究竟走向何方。而 <code>log</code> 则控制本机的日志。</p><h2 id="log-字段"><a href="#log-字段" class="headerlink" title="log 字段"></a>log 字段</h2><p>先来最简单的日志吧。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"log":&#123;</span><br><span class="line">  "loglevel": "warning",</span><br><span class="line">  "access": "/var/log/v2ray/access.log",</span><br><span class="line">  "error":  "/var/log/v2ray/error.log"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>loglevel</code>: “debug” | “info” | “warning” | “error” | “none”<br>日志级别，控制日志的详细程度，从左到右由“最详细”降低到“没有日志”。<br>正常使用 <code>warning</code> 即可。</p></li><li><p><code>access</code> &amp; <code>error</code><br>日志存放地址。access 记录连接数据，error 记录程序启动、错误日志。</p></li></ul><h2 id="inbounds-amp-outbounds-字段"><a href="#inbounds-amp-outbounds-字段" class="headerlink" title="inbounds &amp; outbounds 字段"></a>inbounds &amp; outbounds 字段</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">"ibounds": [&#123;</span><br><span class="line">  "port": 端口,</span><br><span class="line">  "listen": "IP",</span><br><span class="line">  "protocol": "协议名称",</span><br><span class="line">  "settings": &#123;&#125;, // 协议设置</span><br><span class="line">  "tag": "标识",</span><br><span class="line">&#125;],</span><br><span class="line">"outbounds": [&#123;</span><br><span class="line">  "protocol": "协议名称",</span><br><span class="line">  "settings": &#123;&#125;, // 协议设置</span><br><span class="line">  "tag": "标识",</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><p>分别配置入站和出站，拥有几个相似的字段：</p><ul><li><code>protocol</code>: 协议名称<br>入站和出站都有着不同的协议，之后会分别介绍。</li><li><code>settings</code>: 相应协议的配置</li><li><code>tag</code>: string<br>将每个入口、出口都唯一标识，以便之后在路由表中分配。</li></ul><h3 id="ibounds-字段"><a href="#ibounds-字段" class="headerlink" title="ibounds 字段"></a>ibounds 字段</h3><p>入站连接配置。对于客户端，它的入站通常为浏览器。浏览器将数据按照特定协议（HTML 或 SOCKS 5 等）打包，然后发送到本机(localhost <code>127.0.0.1</code>) 的指定监听端口。对于服务器，它的入站为客户端或上一级代理服务器，协议有 VMess，Shadowsocks 等。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">"ibounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"port"</span>: 端口,</span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">"IP"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"协议名称"</span>,</span><br><span class="line">    "settings": &#123;&#125;, // 协议设置</span><br><span class="line">    "tag": "标识",</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><code>port</code>: 监听端口（通常只有一个）</li><li><code>listen</code>: 监听地址<br>默认为 <code>&quot;0.0.0.0&quot;</code>，表示接收所有地址的连接。对于客户端，配置为 <code>&quot;127.0.0.1&quot;</code> 监听本机。对于服务器端，因为通常客户端的IP不定，所以监听所有。</li></ul><h4 id="入站协议-VMess-介绍"><a href="#入站协议-VMess-介绍" class="headerlink" title="入站协议 VMess 介绍"></a>入站协议 VMess 介绍</h4><p>对于客户端，通常都是浏览器/系统代理的 HTTP 和 SOCKS 协议，对于服务器端，则有 VMess，Shadowsocks 协议等。这里只介绍 VMess。</p><p>VMess 是 V2Ray 的加密传输协议，不使用密码，改用 UUID 加密。 VMess 要求服务器和客户端的 UTC 时间误差在90秒之内。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"settings": &#123;</span><br><span class="line">  "clients": [</span><br><span class="line">    &#123;</span><br><span class="line">      "id": "UUID",   // 要与上一级服务器出站的 UUID 一致</span><br><span class="line">      "alterId": 16,  // 在主ID的基础上，生成额外ID的数量，必须不小于客户端</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="客户端示例"><a href="#客户端示例" class="headerlink" title="客户端示例"></a>客户端示例</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"inbounds":[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"in"</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="服务器端示例"><a href="#服务器端示例" class="headerlink" title="服务器端示例"></a>服务器端示例</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">"inbounds": [&#123;</span><br><span class="line">  "port": 10086,</span><br><span class="line">  "protocol": "vmess",</span><br><span class="line">  "settings": &#123;</span><br><span class="line">    "clients": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"a50ad156-c206-4398-895c-54063954ca69"</span>,</span><br><span class="line">        <span class="attr">"alterId"</span>: <span class="number">16</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h3 id="outbounds-字段"><a href="#outbounds-字段" class="headerlink" title="outbounds 字段"></a>outbounds 字段</h3><p>出站连接配置。对于在海外的服务器端，通常只需一个用于直连即可。对于客户端，则需要多个：</p><ol><li>对海外网站，连接到服务器端(proxy)</li><li>对国内网站，直连(direct)</li><li>对一些 undesirable 的东西，比如广告、定位等，扔到黑洞里去(blocked) hh</li></ol><p><strong>注意，第一个出站协议为主协议，之后路由表中没被匹配的默认走主协议。</strong>所以第一个就放代理。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">"outbounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"协议名称"</span>,</span><br><span class="line">    "settings": &#123; 协议设置 &#125;,</span><br><span class="line">    "tag": "标识",</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Emm…看上去比 <code>inbounds</code> 还简单……就直接上协议啦！</p><h4 id="出站协议介绍"><a href="#出站协议介绍" class="headerlink" title="出站协议介绍"></a>出站协议介绍</h4><p>出站协议对于客户端是最重要的，因为毕竟不会傻到把所有流量，不管国内外，都扔到服务器那儿去 XD</p><ol><li><p><code>blackhole</code>: 名副其实的黑洞，阻碍所有数据的出站。可以在设置中指定是否返回数据：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"settings": &#123;</span><br><span class="line">  "response": &#123;</span><br><span class="line">    "type": "none"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>“type”: “none”｜”http”</p><ul><li><code>none</code>: 不返回任何数据</li><li><code>http</code>: 返回 403 错误</li></ul></li><li><p><code>freedom</code>: 直连。多用于客户端的国内网站，还有服务器端的出站</p></li><li><p><code>vmess</code>: 依旧注意时差和UUID的一致</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">"settings": &#123;</span><br><span class="line">  "vnext": [</span><br><span class="line">    &#123;</span><br><span class="line">      "address": "IP",  // 下一级服务器IP</span><br><span class="line">      "port": 10086,    // 下一级服务器端口</span><br><span class="line">      "users": [</span><br><span class="line">        &#123;</span><br><span class="line">          "id": "UUID", // 注意与下一级服务器一致</span><br><span class="line">          "alterId": 16,// 不大于下一级服务器</span><br><span class="line">          "security": "auto", // 加密方法(auto即可)</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="客户端示例-1"><a href="#客户端示例-1" class="headerlink" title="客户端示例"></a>客户端示例</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">"outbounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    "tag": "proxy", // 不要忘了各种 tag</span><br><span class="line">    "protocol": "vmess",</span><br><span class="line">    "settings": &#123; // VMess 配置</span><br><span class="line">      "vnext": [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"address"</span>: <span class="string">""</span>,</span><br><span class="line">          <span class="attr">"port"</span>: <span class="number">10086</span>,</span><br><span class="line">          <span class="attr">"users"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">"id"</span>: <span class="string">"a50ad156-c206-4398-895c-54063954ca69"</span>,</span><br><span class="line">              <span class="attr">"alterId"</span>: <span class="number">16</span>,</span><br><span class="line">              <span class="attr">"security"</span>: <span class="string">"auto"</span>,</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    "tag": "direct",  // 不要忘了 x2</span><br><span class="line">    "protocol": "freedom"</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    "tag": "blocked", // 不要忘了 x3</span><br><span class="line">    "protocol": "blackhole"</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="routing-字段"><a href="#routing-字段" class="headerlink" title="routing 字段"></a>routing 字段</h2><p>终于来到最难的 routing 了！（至少我是这么认为的……）<br>有些细节我自己也不会……就放到下一次中级篇或者高级篇再详细说明吧 XD</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"routing": &#123;</span><br><span class="line">  "domainStrategy":"IPOnDemand",  // 这样写就行了……</span><br><span class="line">  "rules":[ 各种路由规则 ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="路由规则"><a href="#路由规则" class="headerlink" title="路由规则"></a>路由规则</h3><p>主要是对客户端配置，服务器端直连即可。可以指定多个规则，每个规则通过 tag 指定匹配到的流量的去向（即去到哪个 outbound）。</p><p>路由规则主要有匹配域名(domain)和匹配IP两种。每个规则只能指定两种中的一个，如果都指定，则必须都满足（即满足 domain 又满足 ip ）。不过单条规则下的 domain 或 ip 为数组，可以放置多个规则。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">"rules": [</span><br><span class="line">  &#123;</span><br><span class="line">    "type": "field",  // 必须写，没什么原因 hh</span><br><span class="line">    "ip": [ ],  // 匹配IP</span><br><span class="line">    "inboundTag": [ 入站的tag ],  // 不写则默认所有</span><br><span class="line">    "outboundTag": 出站的tag（流量去向）</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    "type": "field",</span><br><span class="line">    "domain": [ ],  // 匹配域名</span><br><span class="line">    "inboundTag": [ 入站的tag ],</span><br><span class="line">    "outboundTag": 出站的tag</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>下面分别看匹配域名和IP的语法。</p><h4 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h4><ol><li>纯文本：部分匹配，只需匹配域名的一部分即可，如 <code>&quot;sina.com&quot;</code> 匹配 <code>&quot;www.sina.com&quot;</code>, <code>&quot;lala-sina.com&quot;</code> 等。</li><li>正则表达式（不推荐）</li><li>子域名（推荐）：<code>&quot;domain:域名&quot;</code>，如 <code>domain:v2ray.com</code> 匹配 <code>&quot;www.v2ray.com&quot;</code>, <code>&quot;v2ray.com&quot;</code> ，但不匹配 <code>&quot;lala-v2ray.com&quot;</code>。</li><li>完整匹配：<code>&quot;full:域名&quot;</code>，必须完整匹配（注意是否有”www”）。</li><li>预定义域名列表：<code>&quot;geosite:比目鱼&quot;</code>，<code>比目鱼</code>为：<ul><li><code>category-ads</code>: 常见广告域名</li><li><code>cn</code>: 常见大陆域名（<code>geolocation-cn</code> + <code>tld-cn</code>）</li><li><code>geolocation-cn</code>: 常见国内站点域名</li><li><code>geolocation-!cn</code>: 常见非国内站点域名</li><li><code>tld-cn</code>: 所有以 .cn 和 .中国 结尾的域名</li></ul></li><li>从文件中加载域名（见官方手册吧……）</li></ol><h4 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h4><ol><li>完整IP</li><li>Geoip：<code>&quot;geoip:双字符国家代码&quot;</code>，如 <code>&quot;geoip:cn&quot;</code>。还有 <code>&quot;geoip:private&quot;</code>，包含所有私有地址。</li><li>从文件中加载IP（见手册 as well）</li></ol><h3 id="客户端示例-2"><a href="#客户端示例-2" class="headerlink" title="客户端示例"></a>客户端示例</h3><p>内网和大陆直连，屏蔽广告，其余代理。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">"routing": &#123;</span><br><span class="line">  "domainStrategy":"IPOnDemand",</span><br><span class="line">  "rules":[</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>:<span class="string">"field"</span>,</span><br><span class="line">      <span class="attr">"ip"</span>:[</span><br><span class="line">        <span class="string">"geoip:private"</span>,</span><br><span class="line">        <span class="string">"geoip:cn"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"outboundTag"</span>:<span class="string">"direct"</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      "type": "field",</span><br><span class="line">      "domain": [</span><br><span class="line">        <span class="string">"geosite:cn"</span></span><br><span class="line">      ],</span><br><span class="line">      "outboundTag": "direct"</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">      <span class="attr">"domain"</span>: [</span><br><span class="line">        <span class="string">"geosite:category-ads"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"outboundTag"</span>: <span class="string">"blackhole"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Anyway这是一个比较初级的教程，我还有很多不理解，等到理解了就有中高级了吧 hh</p><p>最后贴一下模板，所有包含 TODO 的都是要改的。</p><p>客户端</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span>,</span><br><span class="line">    <span class="attr">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">    <span class="attr">"error"</span>:  <span class="string">"/var/log/v2ray/error.log"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">1080</span>,</span><br><span class="line">      <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"in"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"proxy"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"address"</span>: <span class="string">"TODO"</span>,</span><br><span class="line">            <span class="attr">"port"</span>: TODO,</span><br><span class="line">            <span class="attr">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"id"</span>:<span class="string">"TODO"</span>,</span><br><span class="line">                <span class="attr">"alterId"</span>: <span class="number">16</span>,</span><br><span class="line">                <span class="attr">"security"</span>: <span class="string">"auto"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"domainStrategy"</span>:<span class="string">"IPOnDemand"</span>,</span><br><span class="line">    <span class="attr">"rules"</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>:<span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>:[</span><br><span class="line">          <span class="string">"geoip:private"</span>,</span><br><span class="line">          <span class="string">"geoip:cn"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>:<span class="string">"direct"</span></span><br><span class="line">      &#125;,&#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"domain"</span>: [</span><br><span class="line">          <span class="string">"geosite:cn"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"domain"</span>: [</span><br><span class="line">          <span class="string">"geosite:category-ads"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blackhole"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器端</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: TODO,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"TODO"</span>,</span><br><span class="line">            <span class="attr">"alterId"</span>: TODO</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [ <span class="string">"geoip:private"</span> ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://www.v2ray.com/" target="_blank" rel="noopener">V2Ray 官方文档</a> 以及文档左侧的白话文教程，还有更多。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个初级的 V2Ray 教程，主要为了阐明配置文件的结构，解释基本配置，并提供一个简明的模板，以便日后查阅、复习、深入。&lt;/p&gt;
    
    </summary>
    
      <category term="GFW" scheme="https://thebesttv.github.io/categories/GFW/"/>
    
      <category term="v2ray" scheme="https://thebesttv.github.io/categories/GFW/v2ray/"/>
    
    
      <category term="notes" scheme="https://thebesttv.github.io/tags/notes/"/>
    
      <category term="v2ray" scheme="https://thebesttv.github.io/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 笔记</title>
    <link href="https://thebesttv.github.io/2019/08/07/Hexo-notes/"/>
    <id>https://thebesttv.github.io/2019/08/07/Hexo-notes/</id>
    <published>2019-08-07T11:40:38.000Z</published>
    <updated>2019-08-15T09:00:15.796Z</updated>
    
    <content type="html"><![CDATA[<p>Emm……这是一份还没完成的 Hexo 笔记。<br>awiting 填坑，填天坑……</p><a id="more"></a><h1 id="简介-What-is-Hexo"><a href="#简介-What-is-Hexo" class="headerlink" title="简介 What is Hexo?"></a>简介 What is Hexo?</h1><blockquote><p>Hexo is a fast, simple and powerful blog framework.</p></blockquote><p>简言之，Hexo 是一个静态博客生成器，简便且快速。<br>至于什么是静态博客 TODO</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Hexo 依赖 Node.js, Git。在此建议<strong>不要使用 <code>apt</code> 的方法安装 Node.js</strong>，否则之后很多操作都会需要 root 权限，会造成很大不便。</p><ol><li><p>安装 Git （跳过）</p></li><li><p>安装 nvm (Node Version Manager)</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure><ol start="3"><li>使用 nvm 安装 Node.js（安装时不挂系统代理）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><p>也可先 <code>nvm ls-remote</code> 查看可用安装包，然后 <code>nvm install &lt;version&gt;</code>。</p><ol start="4"><li>使用 npm 安装 Hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="5"><li>嵌入 pdf<br>网上的 pdf tag 插件还是没用……就直接用html代码植入吧……只要把那个 <code>lalala.pdf</code> 改掉就行啦 hh<br>如果用本地pdf的话，就像插入图片一样，放到和post同名的目录下，<code>src</code> 只要输入文件名即可。<br>唯一美中不足的是，如果有印象笔记的插件，那个“保存至印象笔记”的小圈圈就会全程在网页右侧（pdf以外……），而且最无奈的是它还不能用……<br>Anyway 至少我们可以嵌入pdf啦 :D<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"512px"</span> <span class="attr">src</span>=<span class="string">"lalala.pdf"</span> <span class="attr">type</span>=<span class="string">"application/pdf"</span> <span class="attr">internalinstanceid</span>=<span class="string">"15"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install <span class="comment"># 安装依赖</span></span><br></pre></td></tr></table></figure><p>此时文档结构为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml   # Hexo 配置文件</span><br><span class="line">├── node_modules  # 模块 ???</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── scaffolds     # 文章模板</span><br><span class="line">│   ├── draft.md</span><br><span class="line">│   ├── page.md</span><br><span class="line">│   └── post.md</span><br><span class="line">├── source        # 主要博客内容</span><br><span class="line">│   └── _posts    # 文章</span><br><span class="line">└── themes        # Hexo 主题</span><br><span class="line">    └── landscape</span><br></pre></td></tr></table></figure><h1 id="插件-amp-配置"><a href="#插件-amp-配置" class="headerlink" title="插件&amp;配置"></a>插件&amp;配置</h1><ol><li><p>RSS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p>部署到 GitHub Pages<br>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ol><p>配置 <code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;GitHub Pages repo 地址&gt;</span><br><span class="line">  # repo: git@github.com:thebesttv/thebesttv.github.io.git</span><br><span class="line">    # 使用 ssh 的方式避免每次输入用户名和密码</span><br></pre></td></tr></table></figure><ol start="3"><li>使用 NexT 主题<br>进入博客根目录，安装 NexT<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li></ol><p>将 Hexo 配置文件的 theme 改为 NexT<br>清空缓存 <code>hexo clean</code></p><p>next/_config.yml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scheme: Pisces # Menci 同款 hh</span><br><span class="line">avatar # 头像</span><br></pre></td></tr></table></figure><ol start="4"><li>新建页面</li></ol><p>对于 NexT 主题中的 Tags, Categories, About, 404 等页面的创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &lt;page name&gt;</span><br></pre></td></tr></table></figure><p>TODO</p><h1 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h1><h2 id="新建post"><a href="#新建post" class="headerlink" title="新建post"></a>新建post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line"><span class="comment"># layout 即为 scaffolds 目录下的模板，默认有 post / draft / page</span></span><br></pre></td></tr></table></figure><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p><code>hexo g; hexo d</code> 或 <code>hexo g -d</code> 或 <code>hexo d -g</code></p><h2 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="有层次的category："><a href="#有层次的category：" class="headerlink" title="有层次的category："></a>有层次的category：</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">- </span>[Sports, Baseball]</span><br><span class="line"><span class="bullet">- </span>[MLB, American League, Boston Red Sox]</span><br><span class="line"><span class="bullet">- </span>[MLB, American League, New York Yankees]</span><br><span class="line"><span class="bullet">- </span>Rivalries</span><br></pre></td></tr></table></figure><h2 id="Tag-Plugins-标签插件："><a href="#Tag-Plugins-标签插件：" class="headerlink" title="Tag Plugins 标签插件："></a>Tag Plugins 标签插件：</h2><h1 id="奇技淫巧"><a href="#奇技淫巧" class="headerlink" title="奇技淫巧"></a>奇技淫巧</h1><ol><li>Chrome 浏览器强制刷新<br>每次 deploy 之后像个傻子一样各种按<code>F5</code>然并卵，后来才想到要强制刷新……<br>Linux 下使用 <code>Shift</code>+<code>F5</code> 即可 hh</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Emm……这是一份还没完成的 Hexo 笔记。&lt;br&gt;awiting 填坑，填天坑……&lt;/p&gt;
    
    </summary>
    
    
      <category term="Notes" scheme="https://thebesttv.github.io/tags/Notes/"/>
    
      <category term="Hexo" scheme="https://thebesttv.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Daisyの喜羊羊与灰太郎</title>
    <link href="https://thebesttv.github.io/2019/08/05/Daisy_e_xyyyhtl/"/>
    <id>https://thebesttv.github.io/2019/08/05/Daisy_e_xyyyhtl/</id>
    <published>2019-08-05T08:05:25.000Z</published>
    <updated>2019-08-23T10:28:31.506Z</updated>
    
    <content type="html"><![CDATA[<p>Daisy plays 小提琴……</p><a id="more"></a><p>有喜羊羊，其实还有memory hh</p><p>喜羊羊<br><audio controls><br>  <source src="xyy.mp3" type="audio/mp3"><br>  Emm… audio element not supported by your browser :(<br></audio></p><p>Memory<br><audio controls><br>  <source src="memory.mp3" type="audio/mp3"><br>  Emm… audio element not supported by your browser :(<br></audio></p><p>UPD 2019-08-23<br>还有卡农和大鱼海棠 XD</p><p>Canon<br><audio controls><br>  <source src="canon.mp3" type="audio/mp3"><br>  Emm… audio element not supported by your browser :(<br></audio></p><p>大鱼海棠<br><audio controls><br>  <source src="bigfish.mp3" type="audio/mp3"><br>  Emm… audio element not supported by your browser :(<br></audio></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Daisy plays 小提琴……&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>[UVa 11729] Commando War</title>
    <link href="https://thebesttv.github.io/2019/07/01/UVA_11729_Commando_War/"/>
    <id>https://thebesttv.github.io/2019/07/01/UVA_11729_Commando_War/</id>
    <published>2019-07-01T12:55:00.000Z</published>
    <updated>2019-08-04T13:35:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定 n 个士兵，让他们干活。对于每个士兵 i ，交代任务时间为 $B_i$ ，然后他执行任务的时间为 $J_i$。一个个给他们下达命令，求最小总时间</p><a id="more"></a><h1 id="解题报告"><a href="#解题报告" class="headerlink" title="解题报告"></a>解题报告</h1><p>贪心：将所有士兵按照 $j$ 排序，然后一个个下达命令即可。<br>汝佳的书上基本已经写清楚了，但我一开始还是不太理解为什么要交换“相邻”元素，后来想到冒泡排序。冒泡排序能把任意数列排到有序，那它的逆过程就能把一个有序序列变成任意序列。再扩展一下，只需多次相邻两两交换就可得到任意序列。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">1000</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, kase=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ind</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Ind &amp;i) <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> b &gt; i.b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;ind[MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) &amp;&amp; n)&#123;</span><br><span class="line">    FOR(i,<span class="number">0</span>,n) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;ind[i].a, &amp;ind[i].b);</span><br><span class="line">    sort(ind, ind+n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,sa=<span class="number">0</span>;</span><br><span class="line">    FOR(i,<span class="number">0</span>,n)&#123;</span><br><span class="line">      sa += ind[i].a;</span><br><span class="line">      ans = max(ans, sa + ind[i].b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>,++kase,ans);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;给定 n 个士兵，让他们干活。对于每个士兵 i ，交代任务时间为 $B_i$ ，然后他执行任务的时间为 $J_i$。一个个给他们下达命令，求最小总时间&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>even if, even though, even as, even so</title>
    <link href="https://thebesttv.github.io/2019/02/02/even_if_even_though_even_as_even_so/"/>
    <id>https://thebesttv.github.io/2019/02/02/even_if_even_though_even_as_even_so/</id>
    <published>2019-02-01T16:00:00.000Z</published>
    <updated>2019-08-05T03:47:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>这几个词连起来都可以当成歌来唱了……</p><a id="more"></a><h1 id="even-as"><a href="#even-as" class="headerlink" title="even as"></a>even as</h1><p>even：at the very time</p><img src="/2019/02/02/even_if_even_though_even_as_even_so/1.jpg"><p>even as: exactly at the same time</p><blockquote><p>Even as she said this, she knew it was not quite true.<br>Even as I warned her, she slipped.</p></blockquote><h1 id="even-so"><a href="#even-so" class="headerlink" title="even so"></a>even so</h1><p>so 相当于代词，指代上文所提及的情况。even so 具有副词性质，不用作连词。</p><blockquote><p>The bus was only half full. Even so, a young man asked Nina if the seat next to her was taken.<br>There’re many spelling mistakes; even so, it’s quite a good essay.<br>It was cold, but even so we enjoyed the garden party.</p></blockquote><h1 id="重头戏：even-if-even-though"><a href="#重头戏：even-if-even-though" class="headerlink" title="重头戏：even if, even though"></a>重头戏：even if, even though</h1><p>even if &amp; even though 的本质，就是 if 和 though 被 even(ad.) 修饰（暂时这两个even的意思还不明白）。而 if 和 though 在此都为连词，那么这两个词组也就具有了连词的性质。<br>两个词的区别类似于“虽”的两个意思——虽然（表事实的让步）、即使（表假设的让步）</p><h2 id="even-though——强调事实的让步：虽然"><a href="#even-though——强调事实的让步：虽然" class="headerlink" title="even though——强调事实的让步：虽然"></a>even though——强调事实的让步：虽然</h2><blockquote><p>Even though means <em>despite the fact that</em> and is <strong>a more emphatic version of though and although</strong>.</p></blockquote><p>even though 表示的一定是事实</p><blockquote><p>I like her, even though she can be annoying at times.<br>“她有时可能烦人”是一个事实，但这不妨碍我喜欢她。</p></blockquote><blockquote><p>Even though he was bigger, he never looked down on me.</p></blockquote><h2 id="even-if——不强调事实的让步"><a href="#even-if——不强调事实的让步" class="headerlink" title="even if——不强调事实的让步"></a>even if——<em>不强调</em>事实的让步</h2><blockquote><p>even if: regardless of whether; irrespective of (something happening or being the case).</p></blockquote><p>even if 可以表示<em>假设的让步</em>（hypothesis；即使），但其所说的也可以是事实，不过说话者不强调它是事实。</p><blockquote><p>He is a great President, even if he has many enemies. 尽管他有许多敌人，他仍不失为是一位伟大的总统。<br>在此句中，他有敌人是一个事实，但说话者并不强调这一点（无论是与“他是否有敌人”还是与主句之间）</p></blockquote><blockquote><p>Even if you have perfect vision, you should still have your eyes checked regularly.<br>无论你是否有1.0的视力，都要去检查。</p></blockquote><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>Even if I had two hours to spare for shopping, I wouldn’t go out and buy a suit.<br>Even though I had two hours to spare for shopping, I couldn’t find the suit I wanted.</p><p>Even though he lost his job as Arts Minister, he continued to serve in the government.<br>Even if he loses his job as Arts Minister, I think he’ll continue to serve in the government.</p><p>Even though the injury was serious, she decided to carry on playing. It was an important match.<br>I know she’ll want to carry on playing, even if she gets injured. It’s an important match.</p><p>Even though I’ve cleaned it and polished it, it still doesn’t look new.<br>Even if I clean and polish it, it still won’t look new.</p><p>ps. 还是<a href="http://www.bbc.co.uk/worldservice/learningenglish/youmeus/learnit/learnitv122.shtml" target="_blank" rel="noopener">BBC的那个网站</a>讲得好……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几个词连起来都可以当成歌来唱了……&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="https://thebesttv.github.io/categories/%E8%8B%B1%E8%AF%AD/"/>
    
      <category term="Words &amp; Expressions" scheme="https://thebesttv.github.io/categories/%E8%8B%B1%E8%AF%AD/Words-Expressions/"/>
    
    
  </entry>
  
  <entry>
    <title>2019/02/01 英语卡片</title>
    <link href="https://thebesttv.github.io/2019/02/01/English_card/"/>
    <id>https://thebesttv.github.io/2019/02/01/English_card/</id>
    <published>2019-01-31T16:00:00.000Z</published>
    <updated>2019-08-05T03:47:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>好久没有把一张英语卡片标注成这样了……</p><a id="more"></a><img src="/2019/02/01/English_card/card.jpg" title="the card">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好久没有把一张英语卡片标注成这样了……&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Vasily Tsibliyev</title>
    <link href="https://thebesttv.github.io/2019/01/29/Vasily_Tsibliyev/"/>
    <id>https://thebesttv.github.io/2019/01/29/Vasily_Tsibliyev/</id>
    <published>2019-01-28T16:00:00.000Z</published>
    <updated>2019-08-05T03:48:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Tsibliyev.jpg/220px-Tsibliyev.jpg" alt="Vasily Tsibliyev"></p><a id="more"></a><p>今天看了《读写快易通（一）》的第四章，里面是一篇 Times 的关于俄罗斯宇航员 Vasily Tsibliyev 的报道。一开始看文章没太大感觉，不过里面有几道题不太会，然后就查了一下他的报道，然后就看到了另一篇 <a href="http://content.time.com/time/magazine/article/0,9171,138231,00.html" target="_blank" rel="noopener">Life After Mir</a> ，01年的，可能是他回到地球后的生活吧。感觉这篇文章全文都比较 gloomy。<br>一个宇航员，本应该被尊重，但因为几个过失（可能都不是他的错），就变得这样……<br>可能我没看懂文章，不过感觉还是挺悲伤的。</p><p>之后如果能多了解一下他，可能会来更新吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Tsibliyev.jpg/220px-Tsibliyev.jpg&quot; alt=&quot;Vasily Tsibliyev&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>寒假之间</title>
    <link href="https://thebesttv.github.io/2019/01/29/%E5%AF%92%E5%81%87%E4%B9%8B%E9%97%B4/"/>
    <id>https://thebesttv.github.io/2019/01/29/寒假之间/</id>
    <published>2019-01-28T16:00:00.000Z</published>
    <updated>2019-08-05T03:49:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂时有点不想干什么，随便写点抒发一下感慨……</p><a id="more"></a><p>这个寒假会过得很快很快，每天会有很多事做不完，不想做，然而还得继续做。</p><p>刚刚一篇文章的 summary，被 GR 的惊艳了一脸……我可能八辈子都不会用那么厉害的词，都没法归纳得那么精辟了…… emm, like a huge knock on my self-esteem? I don’t know, maybe.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暂时有点不想干什么，随便写点抒发一下感慨……&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>New Year 2019 — transition</title>
    <link href="https://thebesttv.github.io/2019/01/01/NewYear_2019/"/>
    <id>https://thebesttv.github.io/2019/01/01/NewYear_2019/</id>
    <published>2018-12-31T16:00:00.000Z</published>
    <updated>2019-08-05T07:44:48.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/01/NewYear_2019/1.jpg" title="New Year 2019"><a id="more"></a><p>So what is new year?<br>It’s a time for reflection: all you’ve done in the past year — all the achievements you’ve made, all the failures you’ve experienced, all the setbacks you’ve conquered; and all the sweetness you’ve enjoyed, all the bitterness you’ve tasted, something one can call “bittersweet”.<br>But it goes far beyond that. It’s the end of this year, but the starting point of a whole new one, one that you can hope for, one that you can have the wildest imagination about. The year 2019 is a year full of possibilities, and of course, for me, full of tests &amp; scores &amp; mistakes &amp; corrections. And the most important, 高考。</p><p>（没想到看看别人说说就看到2019年了，挺欢乐的哈）</p><h1 id="overall"><a href="#overall" class="headerlink" title="overall"></a>overall</h1><p>这是一个从 OI 到文化课的一年——这是我暂时最好的总结，毕竟太多发生了，太多改变了。</p><h1 id="look-backward"><a href="#look-backward" class="headerlink" title="look backward"></a>look backward</h1><p>就按时间顺序说吧。</p><p>年初的时候我还在准备冬令营，恰逢大雪，期末考试延期，于是几天都待在文德楼。不去评说那段时间有多少成效（毕竟我也不知道），至少还挺温馨的吧。<br>记得去冬令营的前一天晚上，我又出去走了一圈，走得挺远。看一下那天的日记，发现我在思考 活着的意义 ，emm……，现在想想可能就像史铁生说的，用不着思考吧。走之前托 GR 帮我把各种讲义整理一下，她也的确很认真地帮我弄了。<br>其实冬令营那几天挺孤独的，唯一能说上几句话的就是两个市中的小朋友，期间心态也是各种不平。那段时间还好有 Spotlight Stories 啊，也算是无聊的时候的一点慰藉。GH 说好要打给我也没打，很无奈。最靠谱的还是 GR，讲义还帮我拿文件袋装好。<br>结束那天去 GH 楼下拿作业，喝了半小时西北风，也是很无奈。</p><p>那个寒假重心偏来移去的，一会 OI 一会文化课，可能效率真的不高吧。</p><p>去学校前两三天心态又炸了，不过看了看日记，调回来不少。那段时间就是真正的 <a href="https://thebesttv.github.io/2018/02/23/after_winter_holiday/">小高考，再是OI</a> 的转变了，但心里终究有点什么。<br>小高考备考的三个星期说长不长，道短不短，但终究是结束了。其实个人觉得小高考第一天心态还算可以（虽然事后发现成绩不如人意），但周围 GR、BRY 都说政治没考好。<br>最大的转变可能就在第一天的第二节晚自修吧，可以说心情直接低到底谷，具体原因的话，我只能说是我自己的问题，怪不得别人。第二天快到考场了， BRY 突然发现准考证忘拿了，于是跑回去拿，我像个傻子一样等在考场外面。</p><p>考完突然充满感情，给不少人发了祝福，之后回到OI。</p><blockquote><p>明天我至少要给我熟识的或者曾经熟识的大部分人发一条祝福吧，也算是感谢他们了。<br>再过十几天就是省选一试了，也算是倒数第二次比赛、一个再爱OI一次的机会吧。<br>停课基本上是不可能也不会了，不过晚二基本上还是会照常去的。<br>这三个星期眼睛算是废了，希望能调回来吧。<br>看到忧郁的黑客的一段博文：<br>“你知道自己的人生激情是什么吗？可能你并不知道，正如曾经的我。但是，当你发现自己深刻地爱上一样东西时，绝不放手。因为，它或许就是上帝对你的微笑。”<br>我表示同意大部分。<br>最后一个多月，再爱OI一次。</p></blockquote><p>然后是<strong>“被迫的”</strong>春游，上海科技馆还挺好玩的吧。</p><p>马上到四月份的省选一试，又一个好心的老师带我去南理工，他还是把全家都带过去的，也是去旅个游吧。碰到一个学姐，不过没说什么话。<br>不想写什么考试游记，简而言之，我考砸了，可以说是垫底。<br>现在想起来，心仍然会沉到谷底啊。<br>不过那两三天，我至少认识了 ZQY ，发现南理工鸟挺多。</p><p>随之而来的一个星期充满了这一年最大的打击。AFO、小高考2A、换位置，在一个星期里——确切地说，是两天里。这是我实在没有想到的，回想起来仍是语塞，“累累若丧家之犬”？</p><blockquote><p>今天于是又出去散心了。走到拆了的一中突然想进去看看，于是就先看了操场，再是励实楼，最后又看了几乎每个教室。还是看到不少好玩的东西的，虽然被吓得不轻…<br>走之前突然发现门口有一只猫，就和它玩了起来，之前本来想喂狗的豆腐干也正好派上了用场。也是第一次和猫玩吧，感觉它挺好玩的。<br>然后又是 routine ，跑到小学再回家。</p></blockquote><blockquote><p>说实话，本来我想借这次去寻找一下高考的动力，结果没怎么找到。<br>不过说实话，到一中看完，特别是和猫玩了一会，我就隐约感觉这趟旅程完满了。我至少有点动力了，就是周围那些好玩的啊。</p></blockquote><p>之后的事不提也罢，总之我从剧变慢慢走出，开始从 OI 到文化课的转变。<br>我开始习惯左边做着 LYY ，开始正视一团糟的成绩，开始努力甩去与过去的瓜葛，并走向新的未来。<br>期中考试算是给了我一点鼓励，班里勉强第六。<br>课本剧我竟然答应了去演 渔父 ，我们宿舍还策划了一场小小的“谋反”，我竟在凌晨花半小时查屈原的生平。</p><p>到期末考试都发生了什么，我基本上记不清了。<br>对了，有菁马跑，有 ZYF 陪我撑到最后；六月份有18届的高考，有 YWX，有 Candy? 。</p><p>这个暑假是我高中利用的最好的暑假（上一个大半都给竞赛了）。最值得写的就是我开始去楼下补语文，开始慢慢“会”写一点作文吧。</p><blockquote><p>甲壳虫的春天<br>刷题的日子，总是有些枯燥，像是小小的甲壳虫在无尽的树干上艰难地攀爬。<br>一道题，想了几天，终于完成。敲下思路，保存，关机。将机房的灯关上，门锁好。空荡荡的机房，电脑旁，是一只小甲壳虫的守望——你送的画我还好好地存着，我不会忘记那只小甲壳虫，艰难地爬到最高的树上，注视着远处的嫩绿的青草，背上几片雪花在阳光下熠熠发光。<br>三年前，你还在高一吧。那时选竞赛，他们选的不是数学就是物理，唯独你选择了信息学。我们学校向来是以前两者见长的，你也不是老师同学口中的“电脑天才”，可你说你更喜欢计算机与算法，于是你选择了它。<br>当他们聚在大教室里打打闹闹，听老师讲微积分时，你独自在教室，捧着书学习最基本的语言。当他们开始爬上属于自己的树梢时，你终于跨过第一关，真正接触算法。<br>你开始像那小甲虫一样，努力爬到最高的树上。你发觉刷题的重要，你找电脑老师找班主任找教务处，终于得到了梦寐以求的机房钥匙。那天，你高兴得带来了那幅画。<br>自此，高一高二的每一个夜晚，你都在机房中度过。<br>白天，你和他们一起安静地待在教室，做着一样的作业。上课时你也会举手，下课了你也会玩耍。晚自修前，你背上鼓鼓囊囊的书包，独自走过幽幽的长廊，来到上锁的机房。三个半小时的时光，面对电脑，调试程序与代码，屏幕的荧光照亮小甲壳虫的守望。<br>平凡的小甲虫想要爬到高高的树上，可这实在是太难了。俞敏洪最初在冬夜拎着浆糊张贴新东方的广告。甘地一次又一次绝食，为了心中“非暴力”的梦想。你不是老师同学口中的“电脑天才”，你也没有非凡的智商，你甚至要好几天才能理解一个简单的算法。可你拥有对信息学的渴望，你知道做出一道题后小小的骄傲，你见过凌晨校园黑暗的模样，还有四点半初升的朝阳……<br>苔花如米小，也学牡丹开。小小的甲壳虫没有上天赐予的翅膀，只有细细的腿与心中的渴望。<br>你也曾孤独过、迷茫过，觉得无尽的树干是渺茫的未来，纤细的小腿禁不住狂风的摧残。可你最终还是选择向上。你说你爱那些精妙绝伦的算法，你说偌大的互联网上有许多人同你一样，你说平凡人也有权利追逐自己的梦想，你说小甲虫也能看见春天的光芒……<br>回忆起刷题的日子，枯燥中散发光芒。平凡的小甲虫终于爬到最高的树上，痴痴地望着心中的远方。</p></blockquote><p>补课的时候遇到 GH、HYQ ，知道了一中现在高二的 DA ，那是挺好玩的一个人吧。</p><p>已经 <code>2019-01-01 00:48:50</code> 了，好像要快点写了。</p><p>八月份最大的事情就是那两只斑鸠了，开学前几天光顾着伺候它们了。<br>开学一周后又发生了一件不小的事，我找到 GR ，她帮我找到 CR，那两只斑鸠可算有了着落。<br>慢慢发现 CR 可能是个和 GR 一样好的人，真是佩服她们还有 BD 这么幸运是好朋友。</p><p>九月份到现在，说实话可能还不太适合回忆，就只写两三件事吧。<br>一是运动会，各种欢乐。我也可算下去了，也把感谢信给了 CR 。GH 颠球很神奇，HYQ 200米决赛拉伤了腿，BRY 接力跑挺好玩，GR 跑下了三千米，GH、LJY 三千米冲刺几乎狂奔。我们班的拔河是最厉害的吧，GH、XC、HYQ、ZYD、WY爸，很多人都很卖力。<br>还有艺术节，这是我第一次去，有 BRY 和 WZC 陪着，吃了顿还算可以的午饭，看到 CR 三次 XD。<br>最后就是圣诞节 CR 送的蛋了，老欢乐了。回家好不容易把蛋处理了一下，希望能保存着吧。</p><img src="/2019/01/01/NewYear_2019/2.jpg"><p>元旦放假当天菁园下起了雪，GH 和我在柳池附近玩了挺久。我摆了一个 New Year ，他看松树，临走还在门口顺了一个香橼……</p><p>总之这就是我的 2018 ，一个充满转变的年份。</p><p>终于渐渐远离 OI 了，也不知 zbtrs 什么时候从<a href="https://www.cnblogs.com/zbtrs/" target="_blank" rel="noopener">博客园</a>迁移到 <a href="https://zbtrs.github.io/" target="_blank" rel="noopener">github</a> 上了；也不知 scarlyw 进队后怎么样了，NOI 有拿到 PKU 一本吗？还有那么多人，Candy?、Menci、Capella，仿佛不怎么记得他们了。</p><h1 id="look-forward"><a href="#look-forward" class="headerlink" title="look forward"></a>look forward</h1><p>之后的展望，短期就是一模，长期就是高考。<br>具体不说了，已经 1:11 了，要睡觉了。</p><h1 id="周围的人"><a href="#周围的人" class="headerlink" title="周围的人"></a>周围的人</h1><p>I’m blessed with all of them, one way or another.<br>GR、ZYD、GH、WXC、DSY、HYQ、YY，等等等等。</p><p>不说了，睡吧，and wake up to a better tomorrow.</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/01/NewYear_2019/1.jpg&quot; title=&quot;New Year 2019&quot;&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>初赛一周年</title>
    <link href="https://thebesttv.github.io/2018/10/13/%E5%88%9D%E8%B5%9B%E4%B8%80%E5%91%A8%E5%B9%B4/"/>
    <id>https://thebesttv.github.io/2018/10/13/初赛一周年/</id>
    <published>2018-10-12T16:00:00.000Z</published>
    <updated>2019-08-05T03:49:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>没有想到距离 NOIP2017 的初赛已经一年了，time does fly, right？</p><a id="more"></a><p>在这一年里当然发生了各种奇怪的事，不过也没什么，下个月还有复赛一周年呢 XD</p><p>去年立的 flag 总算是倒了，NOIP2018 我是不会去了。看来未来总是那么扑朔迷离啊，nothing’s ever for sure。不知道我们学校今年有谁会接着我的梦想呢，也不知道今年的初赛会不会闹出什么锅呢？</p><p>他们化竞的结果这周终于揭晓了，yyc 没有省队，myw、gr 没有省一，但至少还有几个可爱的人圆梦了吧。<br>故天将降大任于是人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行拂乱其所为，所以动心忍性，曾益其所不能。<br>我相信努力总是有成效的，就如同雨后定能有彩虹；我也相信好人终究有好报，a nice person will always go along。</p><p>ps. 运动会的还没写呢，恐怕要到很久之后才可能写了。<br>pps. 今天好像是路大佬的生日啊，happy coincidence，huh？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有想到距离 NOIP2017 的初赛已经一年了，time does fly, right？&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>斑斑鸠鸠</title>
    <link href="https://thebesttv.github.io/2018/10/13/%E6%96%91%E6%96%91%E9%B8%A0%E9%B8%A0/"/>
    <id>https://thebesttv.github.io/2018/10/13/斑斑鸠鸠/</id>
    <published>2018-10-12T16:00:00.000Z</published>
    <updated>2019-08-05T03:49:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>2018-08-26 10:25<br>于是两只斑鸠找到了新主人，有爱心的 CR ，哦耶~</p><a id="more"></a><p>2018-10-13 21:03<br>国庆的时候两只已经都放飞了，我就当一个 well-wisher 吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018-08-26 10:25&lt;br&gt;于是两只斑鸠找到了新主人，有爱心的 CR ，哦耶~&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://thebesttv.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>相思树</title>
    <link href="https://thebesttv.github.io/2018/09/01/%E7%9B%B8%E6%80%9D%E6%A0%91/"/>
    <id>https://thebesttv.github.io/2018/09/01/相思树/</id>
    <published>2018-08-31T16:00:00.000Z</published>
    <updated>2019-08-04T13:36:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>看了南方周末的一篇文章：<a href="http://www.infzm.com/content/137992" target="_blank" rel="noopener">守卫西南边境线：感受变与不变</a>，挺有感触的，于是就写了，照着暑假里那篇作文的结构。</p><a id="more"></a><p>感觉题目没起好，字数也多了点，不过暂时就这样吧，等会给 fd 看一下。<br>之后说不定会写一篇关于边境农民排雷的（吧……）。</p><p>#正文<br>相思花开，落黄遍地。金鸡山顶，看着伫立你，看着前方的山川天际，还有山下繁荣的土地。<br>太阳还在云层里，山间水汽氤氲，萦绕着山顶。你松树般笔直地挺立，不放过远方的任何动静，身旁的相思树与你一同站立。<br>望着你的身影，想起曾经的点点滴滴。<br>七年前，刚进入大学一个月，还没来得及谈场恋爱，你就来了——来当兵。面对他人的不解，你说你向往，那铮铮铁骨的荣誉精神。<br>当他们还沉浸在初入大学的新鲜感时，你已背上行囊，来到几千公里外的广西。当他们学有所成毕业时，你依然站在这里。他们的青春是奔放而热烈的牡丹花，你的青春却在这里被消磨殆尽，一如山顶不被知晓的相思树。<br>没有手机信号的边境，对刚来哨所的你，简直是一种煎熬。像是回到了前文明时代，曾经的朋友逐渐远离。你抱怨吃饭的时间太短，身边总有不知名的毒虫。你不喜欢三四月份的湿气，让好不容易晒得半干的被子，一个晚上又能挤出水来。你说你看到那棵树就想家，想念母亲的锅巴。<br>七年间，训练、巡逻、站岗，单调又固定，像太阳总在东方升起。<br>每月至少八次的巡逻，一次就是一整天。早晨八点，背上枪，带上锄头、砍刀，还有一支小心揣着的朱笔。二十多公里的路途，穿过茂密的原始森林，趟过奔腾的河流，还要循着前人的足迹跨过危险的雷区。战友和军犬是最忠实的伴侣，毒蛇和蚂蝗是最常见的东西。<br>终于来到界碑，你说那是最庄严的地方，你说无论多累，到那时总会挺直腰杆。走近，擦拭，描红，宣誓，最后拍下带着当天日期的相片。你说那就是你曾经向往的，那就是荣誉。<br>今天是你站岗的日子，无需跋涉几十公里，但也没有丝毫的轻松。太阳早已升离云层，悬在半高的天。山雾消去，一切变得清晰又锐利。机警的山雀不时飞来，忙了一阵又离开。<br>家寄江东远，身对江西春。空见相思树，不见相思人。戍边守关总带着单调与思念。七年，见到的永远是那几个人，手中那杆枪，袋中那支朱笔，还有那被走过一遍又一遍的老路。你不记得多少次，于站岗之时，想起母亲，想起家乡。<br>你不是那些兵中最神气的，不能在阅兵大典上面对镜头，深情地望着你守护的那方百姓。你忍受着几十公里跋涉的煎熬，还有三四月早晨湿漉漉的被子。你担心脚下那些被遗弃的地雷哪天会伤到你的战友。<br>可你仍然坚持着。你说你喜欢那某条路旁那株风铃草，你说你看过日出东方，数过流星飞向远方。你说你知道献身于一项事业的骄傲，用朱笔在界碑上描下“中国”二字的自豪，还有菜园里故乡泥土的芬芳。<br>空气渐渐炎热起来，刺眼的太阳烘烤着金鸡山的大地。七年，曾经青涩的少年，变为面前汗流浃背却纹丝不动的战士，在寂寞中守望繁荣。<br>相思树下，一代又一代的哨兵曾在此站岗，不变的是他们的守望。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了南方周末的一篇文章：&lt;a href=&quot;http://www.infzm.com/content/137992&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;守卫西南边境线：感受变与不变&lt;/a&gt;，挺有感触的，于是就写了，照着暑假里那篇作文的结构。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
